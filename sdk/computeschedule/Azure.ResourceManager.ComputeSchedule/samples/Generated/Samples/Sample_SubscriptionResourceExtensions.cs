// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ComputeSchedule.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ComputeSchedule.Samples
{
    public partial class Sample_SubscriptionResourceExtensions
    {
        // ScheduledActions_VirtualMachinesCancelOperations
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesCancelOperationsScheduledAction_ScheduledActionsVirtualMachinesCancelOperations()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesCancelOperations_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesCancelOperations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "suiinghv";
            CancelOperationsContent content = new CancelOperationsContent(new string[]
            {
"xmwwpmrpfrwdsvphsy"
            }, "yjwbjgw");
            CancelOperationsResponse result = await subscriptionResource.VirtualMachinesCancelOperationsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesCancelOperations_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesCancelOperationsScheduledAction_ScheduledActionsVirtualMachinesCancelOperationsMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesCancelOperations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "slkvhjtc";
            CancelOperationsContent content = new CancelOperationsContent(new string[]
            {
"xmwwpmrpfrwdsvphsy"
            }, "yjwbjgw");
            CancelOperationsResponse result = await subscriptionResource.VirtualMachinesCancelOperationsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteDeallocate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteDeallocateScheduledAction_ScheduledActionsVirtualMachinesExecuteDeallocate()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "eecveyxluytifaub";
            ExecuteDeallocateContent content = new ExecuteDeallocateContent(new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "m");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteDeallocate_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteDeallocateScheduledAction_ScheduledActionsVirtualMachinesExecuteDeallocateMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "qvixtfwg";
            ExecuteDeallocateContent content = new ExecuteDeallocateContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "m");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteHibernate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteHibernateScheduledAction_ScheduledActionsVirtualMachinesExecuteHibernate()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "ejekxpgcvifzmjyryyun";
            ExecuteHibernateContent content = new ExecuteHibernateContent(new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "airm");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteHibernate_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteHibernateScheduledAction_ScheduledActionsVirtualMachinesExecuteHibernateMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "qzbhmledgrvpvlrsdapjqbhwjdpb";
            ExecuteHibernateContent content = new ExecuteHibernateContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "airm");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteStart
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteStartScheduledAction_ScheduledActionsVirtualMachinesExecuteStart()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteStart_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "cbxwldtsku";
            ExecuteStartContent content = new ExecuteStartContent(new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "nmpwzmzhgjqkaxvkaxjgzealmnuflh");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteStart_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteStartScheduledAction_ScheduledActionsVirtualMachinesExecuteStartMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "auoiod";
            ExecuteStartContent content = new ExecuteStartContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "nmpwzmzhgjqkaxvkaxjgzealmnuflh");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesGetOperationStatus
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationStatusScheduledAction_ScheduledActionsVirtualMachinesGetOperationStatus()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "pvygwvwuplmkjsefemzywgfv";
            GetOperationStatusContent content = new GetOperationStatusContent(new string[]
            {
"ognzenepxifqcajgoyhqlloytccz"
            }, "exszttfepmnrtdmhseufoitbp");
            GetOperationStatusResponse result = await subscriptionResource.VirtualMachinesGetOperationStatusScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesGetOperationStatus_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationStatusScheduledAction_ScheduledActionsVirtualMachinesGetOperationStatusMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "brjj";
            GetOperationStatusContent content = new GetOperationStatusContent(new string[]
            {
"ognzenepxifqcajgoyhqlloytccz"
            }, "exszttfepmnrtdmhseufoitbp");
            GetOperationStatusResponse result = await subscriptionResource.VirtualMachinesGetOperationStatusScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitDeallocate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitDeallocateScheduledAction_ScheduledActionsVirtualMachinesSubmitDeallocate()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "hbfrmajzbhes";
            SubmitDeallocateContent content = new SubmitDeallocateContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "yqpmglqptwcpawhpbyylhbyhfqo");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitDeallocate_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitDeallocateScheduledAction_ScheduledActionsVirtualMachinesSubmitDeallocateMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "bxlgnfe";
            SubmitDeallocateContent content = new SubmitDeallocateContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "yqpmglqptwcpawhpbyylhbyhfqo");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitHibernate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitHibernateScheduledAction_ScheduledActionsVirtualMachinesSubmitHibernate()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "dbujaofapwbdtjphni";
            SubmitHibernateContent content = new SubmitHibernateContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "jdrwvjgmoupsufvlxervrwhgvlye");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitHibernate_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitHibernateScheduledAction_ScheduledActionsVirtualMachinesSubmitHibernateMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "olg";
            SubmitHibernateContent content = new SubmitHibernateContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "jdrwvjgmoupsufvlxervrwhgvlye");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitStart
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitStartScheduledAction_ScheduledActionsVirtualMachinesSubmitStart()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitStart_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "cploe";
            SubmitStartContent content = new SubmitStartContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "bdptheyjydrbjhpyueipxoaz");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitStart_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitStartScheduledAction_ScheduledActionsVirtualMachinesSubmitStartMax()
        {
            // Generated from example definition: specification/computeschedule/resource-manager/Microsoft.ComputeSchedule/preview/2024-06-01-preview/examples/ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "5C59A4A5-10FD-48CB-9340-948147D5CD51";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "nuyaaw";
            SubmitStartContent content = new SubmitStartContent(new Schedule(DateTimeOffset.Parse("2024-04-29T20:04:51.538Z"), "itpowykdabwuwlbdqslann", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 8,
                    RetryWindowInMinutes = 5,
                },
            }, new Models.Resources(new string[]
            {
"tpuqhuimqzslptp"
            }), "bdptheyjydrbjhpyueipxoaz");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
