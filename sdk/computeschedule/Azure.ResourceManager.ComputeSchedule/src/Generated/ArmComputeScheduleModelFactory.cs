// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ComputeSchedule.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmComputeScheduleModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.CancelOperationsResponse"/>. </summary>
        /// <param name="results"> An array of resource operations that were successfully cancelled. </param>
        /// <returns> A new <see cref="Models.CancelOperationsResponse"/> instance for mocking. </returns>
        public static CancelOperationsResponse CancelOperationsResponse(IEnumerable<ResourceOperation> results = null)
        {
            results ??= new List<ResourceOperation>();

            return new CancelOperationsResponse(results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperation"/>. </summary>
        /// <param name="resourceId"> Unique identifier for the resource involved in the operation, eg ArmId. </param>
        /// <param name="errorCode"> Resource level error code if it exists. </param>
        /// <param name="errorDetails"> Resource level error details if they exist. </param>
        /// <param name="operation"> Details of the operation performed on a resource. </param>
        /// <returns> A new <see cref="Models.ResourceOperation"/> instance for mocking. </returns>
        public static ResourceOperation ResourceOperation(string resourceId = null, string errorCode = null, string errorDetails = null, ResourceOperationDetails operation = null)
        {
            return new ResourceOperation(resourceId, errorCode, errorDetails, operation, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperationDetails"/>. </summary>
        /// <param name="operationId"> Operation identifier for the unique operation. </param>
        /// <param name="resourceId"> Unique identifier for the resource involved in the operation, eg ArmId. </param>
        /// <param name="opType"> Type of operation performed on the resources. </param>
        /// <param name="subscriptionId"> Subscription id attached to the request. </param>
        /// <param name="deadline"> Deadline for the operation. </param>
        /// <param name="deadlineType"> Type of deadline of the operation. </param>
        /// <param name="state"> Current state of the operation. </param>
        /// <param name="timeZone"> Timezone for the operation. </param>
        /// <param name="resourceOperationError"> Operation level errors if they exist. </param>
        /// <param name="completedOn"> Time the operation was complete if errors are null. </param>
        /// <param name="retryPolicy"> Retry policy the user can pass. </param>
        /// <returns> A new <see cref="Models.ResourceOperationDetails"/> instance for mocking. </returns>
        public static ResourceOperationDetails ResourceOperationDetails(string operationId = null, string resourceId = null, ResourceOperationType opType = default, string subscriptionId = null, DateTimeOffset deadline = default, DeadlineType deadlineType = default, OperationState state = default, string timeZone = null, ResourceOperationError resourceOperationError = null, DateTimeOffset? completedOn = null, RetryPolicy retryPolicy = null)
        {
            return new ResourceOperationDetails(
                operationId,
                resourceId,
                opType,
                subscriptionId,
                deadline,
                deadlineType,
                state,
                timeZone,
                resourceOperationError,
                completedOn,
                retryPolicy,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceOperationError"/>. </summary>
        /// <param name="errorCode"> Code for the error eg 404, 500. </param>
        /// <param name="errorDetails"> Detailed message about the error. </param>
        /// <returns> A new <see cref="Models.ResourceOperationError"/> instance for mocking. </returns>
        public static ResourceOperationError ResourceOperationError(string errorCode = null, string errorDetails = null)
        {
            return new ResourceOperationError(errorCode, errorDetails, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DeallocateResourceOperationResponse"/>. </summary>
        /// <param name="description"> The description of the operation response. </param>
        /// <param name="deallocateResourceOperationResponseType"> The type of resources used in the deallocate request eg virtual machines. </param>
        /// <param name="location"> The location of the deallocate request eg westus. </param>
        /// <param name="results"> The results from the deallocate request if no errors exist. </param>
        /// <returns> A new <see cref="Models.DeallocateResourceOperationResponse"/> instance for mocking. </returns>
        public static DeallocateResourceOperationResponse DeallocateResourceOperationResponse(string description = null, string deallocateResourceOperationResponseType = null, AzureLocation location = default, IEnumerable<ResourceOperation> results = null)
        {
            results ??= new List<ResourceOperation>();

            return new DeallocateResourceOperationResponse(description, deallocateResourceOperationResponseType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.HibernateResourceOperationResponse"/>. </summary>
        /// <param name="description"> The description of the operation response. </param>
        /// <param name="hibernateResourceOperationResponseType"> The type of resources used in the Hibernate request eg virtual machines. </param>
        /// <param name="location"> The location of the Hibernate request eg westus. </param>
        /// <param name="results"> The results from the Hibernate request if no errors exist. </param>
        /// <returns> A new <see cref="Models.HibernateResourceOperationResponse"/> instance for mocking. </returns>
        public static HibernateResourceOperationResponse HibernateResourceOperationResponse(string description = null, string hibernateResourceOperationResponseType = null, AzureLocation location = default, IEnumerable<ResourceOperation> results = null)
        {
            results ??= new List<ResourceOperation>();

            return new HibernateResourceOperationResponse(description, hibernateResourceOperationResponseType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.StartResourceOperationResponse"/>. </summary>
        /// <param name="description"> The description of the operation response. </param>
        /// <param name="startResourceOperationResponseType"> The type of resources used in the start request eg virtual machines. </param>
        /// <param name="location"> The location of the start request eg westus. </param>
        /// <param name="results"> The results from the start request if no errors exist. </param>
        /// <returns> A new <see cref="Models.StartResourceOperationResponse"/> instance for mocking. </returns>
        public static StartResourceOperationResponse StartResourceOperationResponse(string description = null, string startResourceOperationResponseType = null, AzureLocation location = default, IEnumerable<ResourceOperation> results = null)
        {
            results ??= new List<ResourceOperation>();

            return new StartResourceOperationResponse(description, startResourceOperationResponseType, location, results?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.GetOperationStatusResponse"/>. </summary>
        /// <param name="results"> An array of resource operations based on their operation ids. </param>
        /// <returns> A new <see cref="Models.GetOperationStatusResponse"/> instance for mocking. </returns>
        public static GetOperationStatusResponse GetOperationStatusResponse(IEnumerable<ResourceOperation> results = null)
        {
            results ??= new List<ResourceOperation>();

            return new GetOperationStatusResponse(results?.ToList(), serializedAdditionalRawData: null);
        }
    }
}
